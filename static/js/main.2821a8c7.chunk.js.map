{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","onTodoSelected","todoId","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","onQueryChange","onFilterChange","onDelete","query","filter","value","onChange","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onClose","useState","user","setUser","useEffect","userId","href","email","name","App","setTodos","selectedAction","setSelectedAction","setQuery","setFilter","todoList","event","target","length","filtredTodos","toLowerCase","includes","trim","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2821a8c7.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface TodosProps {\n  todos: Todo[] | undefined\n  onTodoSelected: (item: Todo) => void\n  todoId?: number | undefined\n}\nexport const TodoList: React.FC<TodosProps> = ({\n  todos,\n  onTodoSelected,\n  todoId,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\" />\n          <i className=\"fas fa-check\" />\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n    <tbody>\n      {todos?.map(todo => (\n        <tr\n          key={todo.id}\n          data-cy=\"todo\"\n          className={classNames(\n            { 'has-background-info-light': todo.id === todoId },\n          )}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames(\n              {\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              },\n            )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onTodoSelected(todo)}\n            >\n              <span className=\"icon\">\n                <i className={classNames('far', {\n                  'fa-eye-slash': todo.id === todoId,\n                  'fa-eye': todo.id !== todoId,\n                })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","/* eslint-disable jsx-a11y/control-has-associated-label */\ninterface TodoFilterProps {\n  onQueryChange: (event: React.ChangeEvent<HTMLInputElement>) => void\n  onFilterChange: (event: React.ChangeEvent<HTMLSelectElement>) => void\n  onDelete: () => void\n  query: string\n  filter: string\n}\nexport const TodoFilter: React.FC<TodoFilterProps> = ({\n  onQueryChange,\n  onFilterChange,\n  onDelete,\n  query,\n  filter,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filter}\n          onChange={onFilterChange}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={onQueryChange}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {query && (\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={onDelete}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ninterface TodoModalProps {\n  todo: Todo;\n  onClose: () => void;\n}\n\nexport const TodoModal: React.FC<TodoModalProps> = ({ todo, onClose }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId).then(setUser);\n  }, [todo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <p\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </p>\n            { /* eslint-disable-next-line jsx-a11y/control-has-associated-label */ }\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">{todo.title}</p>\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedAction, setSelectedAction] = useState<Todo | null>(null);\n  const [query, setQuery] = useState<string>('');\n  const [filter, setFilter] = useState<string>('all');\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, []);\n\n  const filtredTodos = () => {\n    switch (filter) {\n      case 'all':\n        return todos;\n\n      case 'active':\n        return todos.filter(todo => !todo.completed);\n\n      case 'completed':\n        return todos.filter(todo => todo.completed);\n\n      default:\n        return todos;\n    }\n  };\n\n  const queryFilter = (todoList: Todo[]) => {\n    return todoList\n      .filter(todo => todo.title.toLowerCase()\n        .includes(query.toLowerCase().trim()));\n  };\n\n  const handleFilterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilter(event.target.value);\n  };\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const handleDeleteQuery = () => {\n    setQuery('');\n  };\n\n  const handleSelectedChange = (item: Todo) => {\n    setSelectedAction(item);\n  };\n\n  const handleCloseTodo = () => {\n    setSelectedAction(null);\n  };\n\n  return (\n    <>\n      <div className=\"section\" />\n      <div className=\"container\">\n        <div className=\"box\">\n          <h1 className=\"title\">Todos:</h1>\n\n          <div className=\"block\">\n            <TodoFilter\n              onQueryChange={handleQueryChange}\n              onFilterChange={handleFilterChange}\n              onDelete={handleDeleteQuery}\n              query={query}\n              filter={filter}\n            />\n          </div>\n\n          <div className=\"block\">\n            {!todos.length ? <Loader data-cy=\"loader\" /> : (\n              <TodoList\n                todos={queryFilter(filtredTodos())}\n                onTodoSelected={handleSelectedChange}\n                todoId={selectedAction?.id}\n              />\n            )}\n\n          </div>\n        </div>\n      </div>\n      {selectedAction\n      && <TodoModal todo={selectedAction} onClose={handleCloseTodo} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}